x<1:4
x <-1:4
y <- 2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x <- list(2, "a", "b", TRUE)
y <- x[[1]]
class(y)
typeof(y)
clear
dir
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <- function(x,n)
use <- x > n
x[use]
}
x <- 1:20
above(x>12)
above(x,n)
above <- function(x,n){
use <- x > n
x[use]
}
above(x,n)
above(x, 12)
above(x)
above <- function(x,n=10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
add2 <- function(x,y) {
x + y
}
above10 <- function(x) {
use <- x > 10
x[use]
}
above <- function(x,n=10){
use <- x > n
x[use]
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
source('~/School/Kaggle/titanic/titanic.r')
?readData
?readdata
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
install.package(PET)
install.packages(PET)
install.packages("PET")
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
source('~/School/Kaggle/titanic/titanic.r')
install.packages("Amelia")
source('~/School/Kaggle/titanic/titanic.r')
barplot(table(df.train$Survived),
names.arg = c("Perished", "Survived"),
main="Survived (passenger fate)", col="black")
barplot(table(df.train$Pclass),
names.arg = c("first", "second", "third"),
main="Pclass (passenger traveling class)", col="firebrick")
barplot(table(df.train$Sex), main="Sex (gender)", col="darkviolet")
hist(df.train$Age, main="Age", xlab = NULL, col="brown")
barplot(table(df.train$SibSp), main="SibSp (siblings + spouse aboard)",
col="darkblue")
barplot(table(df.train$Parch), main="Parch (parents + kids aboard)",
col="gray50")
hist(df.train$Fare, main="Fare (fee paid for ticket[s])", xlab = NULL,
col="darkgreen")
barplot(table(df.train$Embarked),
names.arg = c("Cherbourg", "Queenstown", "Southampton"),
main="Embarked (port of embarkation)", col="sienna")
swirl()
library(swirl)
swirl()
install_from_swirl("Data Analysis")
install_from_swirl("Regression Models")
install_from_swirl("Getting and Cleaning Data")
swirl()
cars
str(cars)
dataset$mpgCity
cars$mpgCity
myMPG <- cars$mpgCity
mean(mpg)
mean(myMPG)
median(myMPG)
table(myMPG)
mode(myMPG)
1
19
range(cars$price)
range(cares$price)
range(cars$price)
61.9 - 7.4
var(cars$price)
sd(cars$price)
20
10
25
4
summary(cars$price)
uninstall_from_swirl("Data Analysis")
uninstall("Data Analysis")
uninstall_course("Data Analysis")
swirl()
plot(child ~ parent, galton)
?plot
plot(jitter(child,4) ~ parent,galton)
?jitter
regrline <- lm(child ~ parent, galton)
?lm
abline(regrline, lwd, col='red')
abline(regrline, lwd=3, col='red')
summary(regrline)
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install.packages('googleVis')
install.packages(tsp)
install.packages("tsp)")
install.packages("tsp")
install.packages("TSP")
library("TSP")
data("USCA312")
tsp <- (TSP(USCA312))
tsp
tour <- solve_TSP(tsp, method = "2-opt")
tur
tour
tour
library("maps")
install.packages("maps")
install.packages("sp")
install.packages("maptools")
dat(USCA312_map)
data("USCA312_map")
library("maps")
library("maptools")
gpclibPermit()
plot_path <- function(path) {}
plot_path <- function(path) {
plot(as(USCA312_coords, "Spatial"), axes = TRUE)
plot(USCA_basemap, add = TRUE, col = "gray")
points(USCA312_coords, pch = 3, cex = 0.4, col = "red")
path_line <- SpatialLines(list(Lines(list(Line(USCA312_coords[path,])), ID = "1")))
plot(path_line, add=TRUE, col = "black")
points(USCA312_coords[c(head(path,1),tail(path,1)),], pch = 19, col = "black")
}
plot_path(path)
source('~/School/Coursera/Data_Analysis/maps.R')
plot_path(path)
?solve_TSP
source('~/School/Coursera/Data_Analysis/maps.R')
plot_path(path)
source('~/School/Coursera/Data_Analysis/maps.R')
install.packages("sqldf")
install.packages("forecast")
install.packages("pandasql")
install.packages("plyr")
install.packages("stringr")
install.packages("lubridate")
install.packages("ggplot2")
install.packages("qcc")
install.packages("reshape2")
install.packages("randomForest")
install.packages("Hmisc")
cat?
sdf
?cat
?lm
library(datasets)
data(iris)
?iris
header(iris)
head(iris)
iris_split <- split(iris, iris$Species)
sapply(iris_split, function(x) colmeans(x[, c("Sepal.Length", "Sepal.Width")]))
sapply(iris_split, function(x) colmean(x[, c("Sepal.Length", "Sepal.Width")]))
?colmeans
?colmean
sapply(iris_split, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
q1 <- sapply(iris_split, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
q1
colMeans(iris)
apply(iris,1, mean)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
beep <- sapply(split(mtcars$hp, mtcars$cyl), mean)
beep
range(beep)
y <- range(beep)
y[2]-y[1]
debug(ls)
ls
ls()
2
exit
sdf
?browser
W
Q
undebug(ls)
ls()
source('~/School/Coursera/Data_Analysis/assignment2/ProgrammingAssignment2/testscript.R')
makeVector(1)
makeVector()
y <- rnorm(10)
y
a <- makeVector(1:4)
a
a$get()
source('~/School/Coursera/Data_Analysis/assignment2/ProgrammingAssignment2/cachematrix.R')
sup <- B = matrix(
+   c(2, 4, 3, 1, 5, 7),
+   nrow=3,
+   ncol=2)
sup <- B = matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
sup <- matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
makeCacheMatrix(c(2,4,3,1,5,7), 3,2)
makeCacheMatrix(c(2,4,3,1,5,7), nrow=3, ncol=2)
makeCacheMatrix(sup)
sup$get
get$sup
sup[get]
sup[[get]]
get[[sup]]
source('~/School/Coursera/Data_Analysis/hello.R')
makeCacheMatrix(matrix(c(1:10), 5, 2))
x$get
makeCacheMatrix(sup)
sup$get
get$sup
cacheSolve(sup)
source('~/School/Coursera/Data_Analysis/another.R')
source('~/School/Coursera/Data_Analysis/onemore.R')
makeCacheMatrix()
cacheSolve(sup)
sup
source('~/School/Coursera/Data_Analysis/onemore.R')
cacheSolve(sup)
source('~/School/Coursera/Data_Analysis/another.R')
cacheSolve(sup)
makeCacheMatrix()
cacheSolve(sup)
makeCacheMatrix(sup)
cacheSolve(sup)
source('~/School/Coursera/Data_Analysis/onemore.R')
makeCacheMatrix(sup)
cacheSolve()
cacheSolve(sup)
source('~/School/Coursera/Data_Analysis/another.R')
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2,ncol=2))
amatrix$get()
cacheSolve(m)
cacheSolve(amatrix)
source('~/School/Coursera/Data_Analysis/assignment2/ProgrammingAssignment2/cachematrix.R')
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2,ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
source('~/School/Coursera/Data_Analysis/assignment2/ProgrammingAssignment2/cachematrix.R')
source('~/School/Coursera/Data_Analysis/assignment2/ProgrammingAssignment2/cachematrix.R')
x <- rnorm(100,2,4)
str(x)
f <- gl(40,10)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
s <- split(airquality, airquality$Month)
s
str(s)
x <- rnorm(10)
x <- rnorm(10,20,2)
x
ppois(2,2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100,0,2)
y <- 0.5 + 2 * x + e
plot(y)
plot(x,y)
set.seed(1)
x <- rbinom(100,1,0.5)
e <- rnorm(100,0,2)
y <- 0.5 + 2 * x + e
plot(x,y)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3 * x
y <- rpois(100, exp(log.mu))
plot(x,y)
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot1.r')
setwd("~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1")
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot1.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot1.r')
datasub$Weekday <- weekdays(datasub$Date)
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot2.r')
datasub(head)
head(datasub)
plot(datasub$Weekday, $datasub$Global_active_power, type = "n")
plot(Weekday, Global_active_power, type = "n")
plot(DateTime, Global_active_power, type = "n")
plot(datasub$DateTime, datasub$Global_active_power, type = "n")
plot(datasub$DateTime, datasub$Global_active_power, type = "n", xlab = "n", ylab = "Global Active Power (kilowatts)")
plot(datasub$DateTime, datasub$Global_active_power, type = "n", xlab = 'n', ylab = "Global Active Power (kilowatts)")
plot(datasub$DateTime, datasub$Global_active_power, type = "n", xlab = FALSE, ylab = "Global Active Power (kilowatts)")
plot(datasub$DateTime, datasub$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datasub$DateTime, datasub$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datasub$DateTime, datasub$Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datasub$DateTime, datasub$Global_active_power)
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot2.r')
head(datasub)
plot(datasub$DateTime, datasub$Sub_metering_1, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datasub$Sub_metering_2, col = "red")
lines(datasub$Sub_metering_3, col = "blue")
plot(datasub$DateTime, datasub$Sub_metering_1, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
legend("topright",legend=c("Sub_metering_1, Sub_metering_2, Sub_metering_3"),
col=c("black","red","blue","red"))
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
col=c("black","red","blue"))
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
legend("topright",legend=c("Sub_metering_1, Sub_metering_2, Sub_metering_3"),col=c("black","red","blue"))
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
??legend
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot3.r')
head(datasub)
plot(datasub$DateTime, datasub$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(datasub$DateTime, datasub$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(datasub$DateTime, datasub$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(datasub$DateTime, datasub$Sub_metering_2, col = "red")
lines(datasub$DateTime, datasub$Sub_metering_3, col = "blue")
legend("topright",lty=c(1,1,1),legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),col=c("black","red","blue"), pt.cex=1, cex=1, xjust = 1, bty = "n")
head(datasub)
plot(datasub$DateTime, datasub$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/plot4.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot4.r')
setwd("~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1")
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot4.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot2.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot4.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot1.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot1.r')
source('~/School/Coursera/Data_Analysis/Course 4 - Explanatory Data Analysis/Course Project 1/ExData_Plotting1/plot1.r')
